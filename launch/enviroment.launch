<launch>
  <arg name="model" default="burger" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_init" default="0.8"/>
  <arg name="y_init" default="0.8"/>
  <arg name="z_init" default="0"/>
  <arg name="theta_init" default="0"/>
  <arg name="x_final" default="4.0"/>
  <arg name="y_final" default="4.0"/>
  <arg name="clearance" default="0"/>
  <arg name="rpm1" default="5"/>
  <arg name="rpm2" default="10"/>
  <arg name="file" value="$(find a_star)/src/DifferentialDrive_Astar/scripts/solution_actions.txt" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"  value="$(find a_star)/worlds/map.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro $(find turtlebot3_description)/urdf/turtlebot3_burger.urdf.xacro" />

  <node 
      name="robot_state_publisher" 
      pkg="robot_state_publisher" 
      type="robot_state_publisher" 
      output="screen"/>

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_burger -x $(arg x_init) -y $(arg y_init) -z $(arg z_init) -Y $(arg theta_init) -param robot_description" />

  <node 
      pkg="a_star" 
      name="publisher" 
      type="publisher.py" 
      output="screen"
      args = "$(arg x_init) $(arg y_init) $(arg theta_init) $(arg x_final) $(arg y_final) $(arg clearance) $(arg rpm1) $(arg rpm2) $(arg file)"/>

</launch>
